import React from 'react';
import { Crown, Users, TrendingUp, DollarSign, Target, Zap } from "lucide-react";

const StatCard = ({ icon: Icon, title, value, subtitle, gradient, glow = false }) => (
  <div className={`glass-card rounded-xl md:rounded-2xl p-4 md:p-6 hover:bg-white/15 transition-all duration-300 ${glow ? 'glow' : ''}`}>
    <div className="flex items-center justify-between mb-3 md:mb-4">
      <div className={`w-10 h-10 md:w-12 md:h-12 bg-gradient-to-r ${gradient} rounded-lg md:rounded-xl flex items-center justify-center`}>
        <Icon className="w-5 h-5 md:w-6 md:h-6 text-white" />
      </div>
      <div className="text-right">
        <div className="text-xl md:text-2xl font-bold text-white">{value}</div>
        <div className="text-white/60 text-xs md:text-sm">{title}</div>
      </div>
    </div>
    {subtitle && (
      <p className="text-white/70 text-xs md:text-sm">{subtitle}</p>
    )}
  </div>
);

export default function StatsGrid({ stats, isLoading }) {
  if (isLoading) {
    return (
      <div className="grid grid-cols-2 lg:grid-cols-3 gap-3 md:gap-6 mb-6 md:mb-8">
        {Array(6).fill(0).map((_, i) => (
          <div key={i} className="glass-card rounded-xl md:rounded-2xl p-4 md:p-6 animate-pulse">
            <div className="flex items-center justify-between mb-3 md:mb-4">
              <div className="w-10 h-10 md:w-12 md:h-12 bg-white/10 rounded-lg md:rounded-xl"></div>
              <div className="text-right">
                <div className="w-12 h-6 md:w-16 md:h-8 bg-white/10 rounded mb-2"></div>
                <div className="w-16 h-3 md:w-20 md:h-4 bg-white/10 rounded"></div>
              </div>
            </div>
          </div>
        ))}
      </div>
    );
  }

  return (
    <div className="grid grid-cols-2 lg:grid-cols-3 gap-3 md:gap-6 mb-6 md:mb-8">
      <StatCard
        icon={Crown}
        title="Active Programs"
        value={stats.activePrograms}
        subtitle={`${stats.totalPrograms} total programs`}
        gradient="from-purple-500 to-pink-500"
        glow={stats.activePrograms > 0}
      />
      
      <StatCard
        icon={Users}
        title="Applications"
        value={stats.totalApplications}
        subtitle={`${stats.pendingApplications} pending review`}
        gradient="from-blue-500 to-cyan-500"
      />
      
      <StatCard
        icon={TrendingUp}
        title="Conversions"
        value={stats.totalConversions}
        subtitle="This month"
        gradient="from-emerald-500 to-teal-500"
      />
      
      <StatCard
        icon={DollarSign}
        title="Total Revenue"
        value={`$${stats.totalRevenue.toLocaleString()}`}
        subtitle="Generated by creators"
        gradient="from-orange-500 to-red-500"
        glow={stats.totalRevenue > 0}
      />
      
      <StatCard
        icon={Target}
        title="Conversion Rate"
        value={stats.totalApplications > 0 ? `${((stats.totalConversions / stats.totalApplications) * 100).toFixed(1)}%` : "0%"}
        subtitle="Average across programs"
        gradient="from-violet-500 to-purple-500"
      />
      
      <StatCard
        icon={Zap}
        title="Performance Score"
        value="94"
        subtitle="Above average"
        gradient="from-pink-500 to-rose-500"
      />
    </div>
  );
}